[1,["eaOPtikNpHYrSC23g2uvmr","7co913blJNOadp2EAh4ggq","ecpdLyjvZBwrvm+cedCcQy","f0BIwQ8D5Ml7nTNQbh1YlS","a2MjXRFdtLlYQ5ouAFv/+R","e97GVMl6JHh5Ml5qEDdSGa","29FYIk+N1GYaeWH/q1NxQO","71VhFCTINJM6/Ky3oX9nBT","4cv4+K+jpLXIf9Gcxo+hyW","b4P/PCArtIdIH38t6mlw8Y","adDbOgdWxFlYCqkFYCURPr","e8Ueib+qJEhL6mXAHdnwbi"],["node","_spriteFrame","_textureSetter","_parent","_N$normalSprite","_N$pressedSprite","_N$hoverSprite","_N$disabledSprite","root","avatarRoot","data","_effectAsset"],[["cc.Node",["_name","_objFlags","_components","_prefab","_contentSize","_parent","_children","_trs","_color"],1,9,4,5,1,2,7,5],"cc.SpriteFrame",["cc.Widget",["_alignFlags","alignMode","_originalWidth","_originalHeight","_left","_top","node"],-3,1],["cc.PrefabInfo",["fileId","root"],2,1],["cc.Sprite",["_sizeMode","_type","node","_materials","_spriteFrame"],1,1,3,6],["cc.EffectAsset",["_name","shaders","techniques"],0],["cc.Prefab",["_name"],2],["0850cX1QQdICICRThMn0/nt",["node","avatarRoot"],3,1,1],["cc.Layout",["_resize","_N$layoutType","_N$spacingX","node","_layoutSize","_N$cellSize"],0,1,5,5],["cc.SafeArea",["node"],3,1],["cc.Button",["_N$transition","node","clickEvents","_N$normalColor","_N$pressedColor","_N$disabledColor","_N$target","_N$normalSprite","_N$pressedSprite","_N$hoverSprite","_N$disabledSprite"],2,1,9,5,5,5,1,6,6,6,6],["cc.ClickEvent",["_componentId","handler","target"],1,1],["71243LgcrZORZDFQr8RHolk",["_string","_fontSize","_N$horizontalAlign","_N$verticalAlign","_tid","node","_materials"],-2,1,3],["cc.Material",["_name","_techniqueData"],1]],[[3,0,1,2],[4,0,2,3,4,2],[0,0,5,2,3,4,7,2],[0,0,5,2,3,8,4,2],[2,1,0,2,3,6,5],[4,1,0,2,3,4,3],[0,0,1,6,2,3,4,3],[0,0,5,6,2,3,8,4,7,2],[0,0,5,2,3,8,4,7,2],[2,0,6,2],[2,0,4,5,6,4],[10,0,1,2,3,4,5,6,7,8,9,10,2],[11,0,1,2,3],[5,0,1,2,4],[6,0,2],[0,0,6,2,3,4,7,2],[0,0,6,2,3,4,2],[0,0,5,6,2,3,4,2],[0,0,5,2,3,4,2],[7,0,1,1],[3,1,1],[8,0,1,2,3,4,5,4],[9,0,1],[12,0,1,2,3,4,5,6,6],[13,0,1,3]],[[[{"name":"default_btn_disabled","rect":[0,0,40,40],"offset":[0,0],"originalSize":[40,40],"capInsets":[12,12,12,12]}],[1],0,[0],[2],[7]],[[{"name":"avatar","rect":[0,0,400,400],"offset":[0,0],"originalSize":[400,400],"capInsets":[0,0,0,0]}],[1],0,[0],[2],[8]],[[[13,"avatar-mask",[{"hash":1839995205,"record":null,"name":"avatar-mask|vs|fs","glsl3":{"vert":"\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\n#if USE_TEXTURE\nin vec2 a_uv0;\nout vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform ALPHA_TEST {\n    float alphaThreshold;\n  };\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n      if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n      if (alpha < alphaThreshold) discard;\n  #endif\n}\nin vec4 v_color;\n#if USE_TEXTURE\nin vec2 v_uv0;\nuniform sampler2D texture;\n#endif\nuniform args{\n  float edge;\n};\nvoid main () {\n  vec4 o = vec4(1, 1, 1, 1);\n  #if USE_TEXTURE\n  vec4 texture_tmp = texture(texture, v_uv0);\n  #if CC_USE_ALPHA_ATLAS_texture\n      texture_tmp.a *= texture(texture, v_uv0 + vec2(0, 0.5)).r;\n  #endif\n  #if INPUT_IS_GAMMA\n    o.rgb *= (texture_tmp.rgb * texture_tmp.rgb);\n    o.a *= texture_tmp.a;\n  #else\n    o *= texture_tmp;\n  #endif\n  #endif\n  o *= v_color;\n  vec2 uv = v_uv0.xy - vec2(0.5, 0.5);\n  float rx = abs(uv.x) - (0.5 - edge);\n  float ry = abs(uv.y) - (0.5 - edge);\n  float mx = step(0.5 - edge, abs(uv.x));\n  float my = step(0.5 - edge, abs(uv.y));\n  float radius = length(vec2(rx, ry));\n  float a = 1.0 - mx * my * step(edge, radius) * smoothstep(0., edge * 0.01, radius - edge);\n  o.a *= a;\n  ALPHA_TEST(o);\n  gl_FragColor = o;\n}"},"glsl1":{"vert":"\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\n#if USE_TEXTURE\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform float alphaThreshold;\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n      if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n      if (alpha < alphaThreshold) discard;\n  #endif\n}\nvarying vec4 v_color;\n#if USE_TEXTURE\nvarying vec2 v_uv0;\nuniform sampler2D texture;\n#endif\nuniform float edge;\nvoid main () {\n  vec4 o = vec4(1, 1, 1, 1);\n  #if USE_TEXTURE\n  vec4 texture_tmp = texture2D(texture, v_uv0);\n  #if CC_USE_ALPHA_ATLAS_texture\n      texture_tmp.a *= texture2D(texture, v_uv0 + vec2(0, 0.5)).r;\n  #endif\n  #if INPUT_IS_GAMMA\n    o.rgb *= (texture_tmp.rgb * texture_tmp.rgb);\n    o.a *= texture_tmp.a;\n  #else\n    o *= texture_tmp;\n  #endif\n  #endif\n  o *= v_color;\n  vec2 uv = v_uv0.xy - vec2(0.5, 0.5);\n  float rx = abs(uv.x) - (0.5 - edge);\n  float ry = abs(uv.y) - (0.5 - edge);\n  float mx = step(0.5 - edge, abs(uv.x));\n  float my = step(0.5 - edge, abs(uv.y));\n  float radius = length(vec2(rx, ry));\n  float a = 1.0 - mx * my * step(edge, radius) * smoothstep(0., edge * 0.01, radius - edge);\n  o.a *= a;\n  ALPHA_TEST(o);\n  gl_FragColor = o;\n}"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]}],"samplers":[]},"locals":{"blocks":[{"name":"CCLocal","defines":[]}],"samplers":[]}},"defines":[{"name":"USE_TEXTURE","type":"boolean","defines":[]},{"name":"CC_USE_MODEL","type":"boolean","defines":[]},{"name":"USE_ALPHA_TEST","type":"boolean","defines":[]},{"name":"CC_USE_ALPHA_ATLAS_texture","type":"boolean","defines":["USE_TEXTURE"]},{"name":"INPUT_IS_GAMMA","type":"boolean","defines":["USE_TEXTURE"]}],"blocks":[{"name":"ALPHA_TEST","binding":0,"members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"]},{"name":"args","binding":1,"members":[{"name":"edge","type":13,"count":1}],"defines":[]}],"samplers":[{"name":"texture","type":29,"count":1,"binding":30,"defines":["USE_TEXTURE"]}]}],[{"passes":[{"program":"avatar-mask|vs|fs","blendState":{"targets":[{"blend":true}]},"rasterizerState":{"cullMode":0},"properties":{"texture":{"value":"white","type":29},"alphaThreshold":{"type":13,"value":[0.5]},"edge":{"type":13,"value":[0.15]}}}]}]]],0,0,[],[],[]],[[[14,"Home"],[15,"Home",[-5,-6],[[9,45,-2],[19,-4,-3]],[20,-1],[5,1920,1080],[960,540,0,0,0,0,1,1,1,1]],[16,"avatarRoot",[-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18],[[21,2,3,5,-7,[5,1810,160],[5,160,160]]],[0,"27TvOzO6RJGb6YSAvAt4A1",1],[5,1810,160]],[6,"Background",512,[-21,-22,-23],[[5,1,0,-19,[8],9],[4,0,45,100,40,-20]],[0,"c3JIaTe7FJtbuE6O9D752T",1],[5,100,100]],[17,"SafeArea",1,[-26,-27,2],[[9,45,-24],[22,-25]],[0,"02qy0E4NRDFrr1EN86+sYM",1],[5,1920,1080]],[6,"Background",512,[-30],[[5,1,0,-28,[15],16],[4,0,45,100,40,-29]],[0,"f5Kll2wa9GlLXaTLGhBM1J",1],[5,100,100]],[7,"settingBtn",4,[3],[[11,2,-31,[[12,"0850cX1QQdICICRThMn0/nt","onSettingBtnClicked",1]],[4,4293322470],[4,4291348680],[4,3363338360],3,10,11,12,13],[10,9,20,20,-32]],[0,"88EQgrnatLSJmhosjRqkIC",1],[4,4280247196],[5,100,100],[-890,470,0,0,0,0,1,1,1,1]],[7,"listviewBtn",4,[5],[[11,2,-33,[[12,"0850cX1QQdICICRThMn0/nt","onListViewBtnClicked",1]],[4,4293322470],[4,4291348680],[4,3363338360],5,17,18,19,20],[10,9,140,20,-34]],[0,"adPZF7dI9NyY/DT9R5NK+M",1],[4,4280247196],[5,100,100],[-770,470,0,0,0,0,1,1,1,1]],[3,"background",1,[[4,0,45,200,150,-35],[5,1,0,-36,[0],1]],[0,"4cMVkQgPtLFY4pyNkY0Ax7",1],[4,4294102890],[5,1920,1080]],[8,"line",3,[[1,0,-37,[2],3]],[0,"11qI/R4f1BXYNZfpUC/bqn",1],[4,4278190080],[5,50,4],[0,20,0,0,0,0,1,1,1,1]],[3,"line",3,[[1,0,-38,[4],5]],[0,"b8zjfTrolPrbuMxXxja1g3",1],[4,4278190080],[5,50,4]],[8,"line",3,[[1,0,-39,[6],7]],[0,"22fBz0IQJJ/KWoveQY8hn6",1],[4,4278190080],[5,50,4],[0,-20,0,0,0,0,1,1,1,1]],[3,"Label",5,[[23,"表视图",30,1,1,"TID_LABEL_LIST_VIEW",-40,[14]]],[0,"3cVJx23qRMpoNxA9BAyO2Z",1],[4,4278190080],[5,90,50.4]],[2,"avatar",2,[[1,0,-41,[21],22]],[0,"e4jS5drQFBiovcrY2vX7TY",1],[5,160,160],[-825,0,0,0,0,0,1,1,1,1]],[2,"avatar",2,[[1,0,-42,[23],24]],[0,"16EV3yfO5M8YbgfCxvgV9m",1],[5,160,160],[-660,0,0,0,0,0,1,1,1,1]],[2,"avatar",2,[[1,0,-43,[25],26]],[0,"fd/GeZPGBEF7Q/QCRKafK6",1],[5,160,160],[-495,0,0,0,0,0,1,1,1,1]],[2,"avatar",2,[[1,0,-44,[27],28]],[0,"b4yteUsuBDEZDgaPAVRc2w",1],[5,160,160],[-330,0,0,0,0,0,1,1,1,1]],[2,"avatar",2,[[1,0,-45,[29],30]],[0,"3c9AzWefZMA5gn88vqMvAD",1],[5,160,160],[-165,0,0,0,0,0,1,1,1,1]],[18,"avatar",2,[[1,0,-46,[31],32]],[0,"e9J+p8UxtBAbcv8Ct015pI",1],[5,160,160]],[2,"avatar",2,[[1,0,-47,[33],34]],[0,"27L+cz/hRNKLvG2/lhatIQ",1],[5,160,160],[165,0,0,0,0,0,1,1,1,1]],[2,"avatar",2,[[1,0,-48,[35],36]],[0,"c5zCmTf8RDaJlRBo/CVBxM",1],[5,160,160],[330,0,0,0,0,0,1,1,1,1]],[2,"avatar",2,[[1,0,-49,[37],38]],[0,"11X1spyTRGHL67qUWKwphL",1],[5,160,160],[495,0,0,0,0,0,1,1,1,1]],[2,"avatar",2,[[1,0,-50,[39],40]],[0,"ccHzwH4NpEUZg9bjhZFHyL",1],[5,160,160],[660,0,0,0,0,0,1,1,1,1]],[2,"avatar",2,[[1,0,-51,[41],42]],[0,"35z14FM4FDu7z/Uav0kR4H",1],[5,160,160],[825,0,0,0,0,0,1,1,1,1]]],0,[0,8,1,0,0,1,0,9,2,0,0,1,0,-1,8,0,-2,4,0,0,2,0,-1,13,0,-2,14,0,-3,15,0,-4,16,0,-5,17,0,-6,18,0,-7,19,0,-8,20,0,-9,21,0,-10,22,0,-11,23,0,0,3,0,0,3,0,-1,9,0,-2,10,0,-3,11,0,0,4,0,0,4,0,-1,6,0,-2,7,0,0,5,0,0,5,0,-1,12,0,0,6,0,0,6,0,0,7,0,0,7,0,0,8,0,0,8,0,0,9,0,0,10,0,0,11,0,0,12,0,0,13,0,0,14,0,0,15,0,0,16,0,0,17,0,0,18,0,0,19,0,0,20,0,0,21,0,0,22,0,0,23,0,10,1,2,3,4,3,3,6,5,3,7,51],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[-1,1,-1,1,-1,1,-1,1,-1,1,4,5,6,7,-1,-1,1,4,5,6,7,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1],[2,4,2,4,2,4,2,4,2,3,3,5,3,6,2,2,3,3,5,3,6,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1]],[[{"name":"default_btn_pressed","rect":[0,0,40,40],"offset":[0,0],"originalSize":[40,40],"capInsets":[12,12,12,12]}],[1],0,[0],[2],[9]],[[[24,"avatar-mask",{"0":{"defines":{"USE_TEXTURE":true}}}]],0,0,[0],[11],[10]],[[{"name":"default_btn_normal","rect":[0,0,40,40],"offset":[0,0],"originalSize":[40,40],"capInsets":[12,12,12,12]}],[1],0,[0],[2],[11]]]]